schema_info:
  title: DDBJ (DNA Data Bank of Japan)
  description: |
    DDBJ RDF provides structured access to nucleotide sequence data from the DNA Data Bank of Japan, part of the International Nucleotide Sequence Database Collaboration (INSDC). The database contains nucleotide sequence entries with comprehensive genomic annotations including genes, coding sequences (CDS), exons, and various RNA features (tRNA, rRNA). Each entry is linked to rich biological metadata including organism information, taxonomic classification, functional annotations, and protein translations. Entries are cross-referenced to external resources such as BioProject, BioSample, NCBI Protein, and taxonomic databases. The RDF representation uses standard ontologies including FALDO for genomic coordinates, Sequence Ontology (SO) for feature types, and BFO/RO for biological relationships.
  endpoint: https://rdfportal.org/ddbj/sparql
  base_uri: http://identifiers.org/insdc/
  graphs:
    - http://rdfportal.org/dataset/ddbj
    - http://rdfportal.org/ontology/nucleotide
    - http://rdfportal.org/ontology/so
    - http://rdfportal.org/ontology/faldo
  version:
    mie_version: "1.0"
    mie_created: "2025-10-27"
    data_version: "DDBJ Release (continuous updates)"
    update_frequency: "Daily"
  license:
    data_license: "CC0 1.0 Universal (CC0 1.0) Public Domain Dedication"
    license_url: "https://creativecommons.org/publicdomain/zero/1.0/"
  access:
    rate_limiting: "No strict rate limit, please use responsibly"
    max_query_timeout: "60 seconds"

shape_expressions: |
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
  PREFIX dcterms: <http://purl.org/dc/terms/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX faldo: <http://biohackathon.org/resource/faldo#>
  PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
  PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
  PREFIX ro: <http://purl.obolibrary.org/obo/RO_>
  PREFIX sio: <http://semanticscience.org/resource/SIO_>
  PREFIX so: <http://purl.obolibrary.org/obo/SO_>
  
  <EntryShape> {
    a [ nuc:Entry ] ;
    rdfs:label xsd:string ;
    dcterms:identifier xsd:string ;
    nuc:definition xsd:string ;
    nuc:organism xsd:string ;
    nuc:taxonomy xsd:string ;
    nuc:division IRI ;
    nuc:sequence IRI ;
    nuc:sequence_version xsd:string ;
    nuc:sequence_date xsd:date ;
    nuc:dblink IRI* ;
    nuc:reference IRI* ;
    nuc:comment xsd:string ? ;
    nuc:source xsd:string ?
  }
  
  <GeneShape> {
    a [ nuc:Gene ] ;
    rdfs:subClassOf IRI+ ;
    rdfs:label xsd:string ;
    dcterms:identifier xsd:string ;
    skos:prefLabel xsd:string ;
    nuc:locus_tag xsd:string ;
    nuc:gene xsd:string ? ;
    nuc:location xsd:string ;
    faldo:location @<RegionShape> ;
    bfo:0000050 IRI ;
    bfo:0000051 IRI* ;
    ro:0002162 IRI ;
    sio:000974 IRI ?
  }
  
  <CodingSequenceShape> {
    a [ nuc:Coding_Sequence ] ;
    rdfs:subClassOf IRI+ ;
    rdfs:label xsd:string ;
    dcterms:identifier xsd:string ;
    skos:prefLabel xsd:string ;
    nuc:locus_tag xsd:string ;
    nuc:gene xsd:string ? ;
    nuc:product xsd:string ;
    nuc:translation xsd:string ;
    nuc:location xsd:string ;
    nuc:codon_start xsd:integer ;
    nuc:transl_table xsd:integer ;
    nuc:inference xsd:string* ;
    faldo:location @<RegionShape> ;
    rdfs:seeAlso IRI ;
    sio:010081 IRI ;
    bfo:0000050 IRI ;
    bfo:0000051 IRI* ;
    ro:0002162 IRI ;
    sio:000974 IRI ?
  }
  
  <ExonShape> {
    a [ nuc:Exon ] ;
    rdfs:subClassOf IRI ;
    faldo:location @<RegionShape>
  }
  
  <TransferRNAShape> {
    a [ nuc:Transfer_RNA ] ;
    rdfs:subClassOf IRI+ ;
    rdfs:label xsd:string ;
    nuc:location xsd:string ;
    faldo:location @<RegionShape> ;
    nuc:product xsd:string ? ;
    bfo:0000050 IRI ;
    ro:0002162 IRI
  }
  
  <RibosomalRNAShape> {
    a [ nuc:Ribosomal_RNA ] ;
    rdfs:subClassOf IRI+ ;
    rdfs:label xsd:string ;
    nuc:location xsd:string ;
    faldo:location @<RegionShape> ;
    nuc:product xsd:string ? ;
    bfo:0000050 IRI ;
    ro:0002162 IRI
  }
  
  <SourceShape> {
    a [ nuc:Source ] ;
    rdfs:subClassOf IRI ;
    rdfs:label xsd:string ;
    nuc:organism xsd:string ;
    nuc:mol_type xsd:string ;
    nuc:location xsd:string ;
    faldo:location @<RegionShape> ;
    rdfs:seeAlso IRI ;
    nuc:note xsd:string ? ;
    bfo:0000050 IRI ;
    bfo:0000051 IRI* ;
    ro:0002162 IRI ;
    sio:000974 IRI ? ;
    nuc:proviral xsd:integer ?
  }
  
  <BioProjectShape> {
    a [ nuc:BioProject ]
  }
  
  <BioSampleShape> {
    a [ nuc:BioSample ]
  }
  
  <RegionShape> {
    a [ faldo:Region ] ;
    faldo:begin @<PositionShape> ;
    faldo:end @<PositionShape>
  }
  
  <PositionShape> {
    a [ faldo:Position faldo:ExactPosition ] ;
    faldo:position xsd:integer ;
    faldo:reference IRI
  }

sample_rdf_entries:
  - title: Nucleotide Entry with Metadata
    description: Complete genome sequence entry showing organism information, taxonomy, and external database links to BioProject and BioSample.
    rdf: |
      @prefix nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/> .
      @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
      @prefix dcterms: <http://purl.org/dc/terms/> .
      
      <http://identifiers.org/insdc/CP036276.1>
        a nuc:Entry ;
        rdfs:label "Symmachiella dynata strain Mal52 chromosome, complete genome." ;
        dcterms:identifier "CP036276.1" ;
        nuc:definition "Symmachiella dynata strain Mal52 chromosome, complete genome." ;
        nuc:organism "Symmachiella dynata" ;
        nuc:taxonomy "Bacteria; Planctomycetota; Planctomycetia; Planctomycetales; Planctomycetaceae; Symmachiella." ;
        nuc:division <http://ddbj.nig.ac.jp/ontologies/nucleotide/Division#BCT> ;
        nuc:sequence_version "CP036276.1" ;
        nuc:sequence_date "2019-07-31"^^xsd:date ;
        nuc:dblink <http://identifiers.org/biosample/SAMN10954015> ;
        nuc:dblink <http://identifiers.org/bioproject/PRJNA485700> ;
        nuc:sequence <http://identifiers.org/insdc/CP036276.1#sequence> ;
        nuc:reference <http://identifiers.org/insdc/CP036276.1#reference.1> .

  - title: Gene Feature with Annotations
    description: Gene feature showing locus tag, gene symbol, location using FALDO coordinates, and relationships to parent sequence and child exon.
    rdf: |
      @prefix nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/> .
      @prefix faldo: <http://biohackathon.org/resource/faldo#> .
      @prefix bfo: <http://purl.obolibrary.org/obo/BFO_> .
      @prefix ro: <http://purl.obolibrary.org/obo/RO_> .
      @prefix so: <http://purl.obolibrary.org/obo/SO_> .
      
      <http://identifiers.org/insdc/CP036276.1#feature:1001623-1002915:1:gene.47722>
        a nuc:Gene ;
        rdfs:subClassOf so:0000010, so:0000704 ;
        rdfs:label "Mal52_08030" ;
        dcterms:identifier "Mal52_08030" ;
        nuc:locus_tag "Mal52_08030" ;
        nuc:gene "clpX" ;
        nuc:location "1001623..1002915" ;
        faldo:location <http://identifiers.org/insdc/CP036276.1#region:1001623-1002915:1> ;
        bfo:0000050 <http://identifiers.org/insdc/CP036276.1#sequence> ;
        bfo:0000051 <http://identifiers.org/insdc/CP036276.1#feature:1001623-1002915:1:exon> ;
        ro:0002162 <http://identifiers.org/taxonomy/2527995> .

  - title: Coding Sequence with Protein Translation
    description: CDS feature with functional annotation (product), full protein translation, inference methods, and link to NCBI Protein database.
    rdf: |
      @prefix nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/> .
      @prefix sio: <http://semanticscience.org/resource/SIO_> .
      
      <http://identifiers.org/insdc/CP036276.1#feature:1001623-1002915:1:CDS.47054>
        a nuc:Coding_Sequence ;
        rdfs:subClassOf so:0000316, so:0000673 ;
        nuc:locus_tag "Mal52_08030" ;
        nuc:gene "clpX" ;
        nuc:product "ATP-dependent Clp protease ATP-binding subunit ClpX" ;
        nuc:codon_start 1 ;
        nuc:transl_table 11 ;
        nuc:inference "ab initio prediction:Prodigal:2.6" ;
        nuc:inference "similar to AA sequence:UniProtKB:P50866" ;
        nuc:translation "MPSGNDVTSGSRGATGKKNANCSFCRKSYREVGPLVEGPSDVYICGECIELCQSILEQERRRRGSSPSLFTKVPTPREIVENLEQYVIGQDRAKKVLAVAVHNHYKRLMISADADNDVEVEKSNIMLIGPTGCGKTLLARTLARTLQVPFAIGDATTLTEAGYVGEDVENLLLKLLHAADFDIEAAQRGILFIDEIDKIGKTSQNVSITRDVSGEGVQQALLKMLEGTVANVPPQGGRKHPEQQYIQMDTTNILFICGGTFVGLEDIIAKRLGNKVIGFGSSGSGGGSTRSENEKGELLSQVCVDDILEFGLIPELVGRLPVATALTPLDKEHLVRIMQEPRNSLVRQYQKFFEMENAELEFTPEALLEIAGMAKEKDTGARGLRSIVEQVMFDIMYELPERTEHGKYILNDRMVRGEEQMFSQDDSAAA" ;
        rdfs:seeAlso <http://identifiers.org/ncbiprotein/QDU42347.1> ;
        sio:010081 <http://identifiers.org/insdc/CP036276.1#feature:1001623-1002915:1:gene.47722> ;
        faldo:location <http://identifiers.org/insdc/CP036276.1#region:1001623-1002915:1> .

  - title: Source Feature with Organism Information
    description: Source feature containing organism name, molecule type, taxonomic identifier, and proviral qualifier.
    rdf: |
      @prefix nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/> .
      @prefix faldo: <http://biohackathon.org/resource/faldo#> .
      
      <http://identifiers.org/insdc/AB023775.1#feature:103-136:1:source.1>
        a nuc:Source ;
        rdfs:subClassOf so:2000061 ;
        rdfs:label "source" ;
        nuc:organism "Lactobacillus phage phiFSW" ;
        nuc:mol_type "genomic DNA" ;
        nuc:note "synonym: Bacteriophage phiFSW" ;
        nuc:location "103..136" ;
        nuc:proviral 1 ;
        faldo:location <http://identifiers.org/insdc/AB023775.1#region:103-136:1> ;
        rdfs:seeAlso <http://identifiers.org/taxonomy/91019> ;
        bfo:0000050 <http://identifiers.org/insdc/AB023775.1#sequence> ;
        ro:0002162 <http://identifiers.org/taxonomy/1582> .

  - title: FALDO Genomic Location
    description: FALDO region showing precise genomic coordinates with begin and end positions on a reference sequence.
    rdf: |
      @prefix faldo: <http://biohackathon.org/resource/faldo#> .
      
      <http://identifiers.org/insdc/CP036276.1#region:1001623-1002915:1>
        a faldo:Region ;
        faldo:begin <http://identifiers.org/insdc/CP036276.1#position:1001623:1> ;
        faldo:end <http://identifiers.org/insdc/CP036276.1#position:1002915:1> .
      
      <http://identifiers.org/insdc/CP036276.1#position:1001623:1>
        a faldo:ExactPosition ;
        faldo:position 1001623 ;
        faldo:reference <http://identifiers.org/insdc/CP036276.1> .

sparql_query_examples:
  - title: Search Entries by Organism Name
    description: Find nucleotide entries for a specific organism using keyword filtering on the organism property.
    question: What nucleotide entries are available for Escherichia coli?
    complexity: basic
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX dcterms: <http://purl.org/dc/terms/>
      
      SELECT DISTINCT ?entry ?label ?identifier ?organism
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?entry a nuc:Entry ;
               nuc:organism ?organism ;
               rdfs:label ?label ;
               dcterms:identifier ?identifier .
        FILTER(CONTAINS(LCASE(STR(?organism)), "escherichia coli"))
      }
      LIMIT 10

  - title: Retrieve Gene Annotations by Locus Tag
    description: Obtain biological annotations including gene symbol, functional product, and protein translation for specific locus tags.
    question: What are the gene annotations for locus tag Mal52_08030?
    complexity: basic
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?gene ?gene_symbol ?product ?translation
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?gene a nuc:Gene ;
              nuc:locus_tag "Mal52_08030" ;
              nuc:gene ?gene_symbol .
        OPTIONAL {
          ?cds a nuc:Coding_Sequence ;
               nuc:locus_tag "Mal52_08030" ;
               nuc:product ?product ;
               nuc:translation ?translation .
        }
      }

  - title: Find Genes with FALDO Coordinates  
    description: Query genes with their genomic coordinates from a specific entry using FALDO properties.
    question: What are the genomic coordinates of genes in entry CP036276.1?
    complexity: intermediate
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX faldo: <http://biohackathon.org/resource/faldo#>
      
      SELECT ?gene ?locus_tag ?start ?end
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?gene a nuc:Gene ;
              nuc:locus_tag ?locus_tag ;
              faldo:location ?region .
        
        ?region faldo:begin ?begin ;
                faldo:end ?endPos .
        ?begin faldo:position ?start .
        ?endPos faldo:position ?end .
        
        FILTER(CONTAINS(STR(?gene), "CP036276.1"))
      }
      LIMIT 10

  - title: Sample Feature Types in Entry
    description: Sample different genomic feature types present in a specific entry to understand its annotation composition.
    question: What types of features are annotated in entry CP036276.1?
    complexity: intermediate
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?feature ?feature_type ?locus_tag
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?feature a ?feature_type .
        FILTER(?feature_type IN (nuc:Gene, nuc:Coding_Sequence, 
                                 nuc:Transfer_RNA, nuc:Ribosomal_RNA))
        OPTIONAL { ?feature nuc:locus_tag ?locus_tag }
        FILTER(CONTAINS(STR(?feature), "CP036276.1"))
      }
      LIMIT 20

  - title: Find Genes with Specific Functional Products
    description: Search for coding sequences by protein product description to find genes with specific functions.
    question: Find genes encoding proteins related to "protease" function.
    complexity: intermediate
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT DISTINCT ?locus_tag ?gene_symbol ?product
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?cds a nuc:Coding_Sequence ;
             nuc:locus_tag ?locus_tag ;
             nuc:product ?product .
        OPTIONAL { ?cds nuc:gene ?gene_symbol . }
        
        FILTER(CONTAINS(LCASE(STR(?product)), "protease"))
      }
      LIMIT 50

  - title: Retrieve Complete Gene-CDS-Protein Information
    description: Complex query integrating gene, CDS features with protein links and organism information for a specific entry.
    question: Get complete annotation for genes including their CDS, protein IDs, and organism information from entry CP036276.1.
    complexity: advanced
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
      PREFIX sio: <http://semanticscience.org/resource/SIO_>
      PREFIX dcterms: <http://purl.org/dc/terms/>
      
      SELECT ?entry_id ?locus_tag ?gene_symbol ?product ?protein_id ?organism
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?gene a nuc:Gene ;
              nuc:locus_tag ?locus_tag ;
              bfo:0000050 ?sequence .
        OPTIONAL { ?gene nuc:gene ?gene_symbol . }
        
        ?cds a nuc:Coding_Sequence ;
             sio:010081 ?gene ;
             nuc:product ?product ;
             rdfs:seeAlso ?protein_id .
        FILTER(CONTAINS(STR(?protein_id), "ncbiprotein"))
        
        ?entry nuc:sequence ?sequence ;
               nuc:organism ?organism ;
               dcterms:identifier ?entry_id .
        FILTER(STR(?entry_id) = "CP036276.1")
      }
      LIMIT 100

  - title: Find RNA Features by Type
    description: Query to identify tRNA and rRNA features with their product descriptions using simple UNION.
    question: What RNA features (tRNA, rRNA) with product descriptions are present in the database?
    complexity: advanced
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?rna_type ?product
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        {
          ?rna a nuc:Transfer_RNA ;
               nuc:product ?product .
          BIND("tRNA" AS ?rna_type)
        }
        UNION
        {
          ?rna a nuc:Ribosomal_RNA ;
               nuc:product ?product .
          BIND("rRNA" AS ?rna_type)
        }
      }
      LIMIT 20

cross_references:
  - pattern: nuc:dblink
    description: |
      Entry-level links to BioProject and BioSample using the nuc:dblink property.
      These provide connections to experimental metadata and project context.
    databases:
      project_metadata:
        - BioProject (bioproject/): Project-level organization
        - BioSample (biosample/): Sample and specimen metadata
    coverage: Most complete genome entries have both BioProject and BioSample links
    complexity: basic
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?entry ?bioproject ?biosample
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?entry a nuc:Entry ;
               nuc:dblink ?bioproject ;
               nuc:dblink ?biosample .
        FILTER(CONTAINS(STR(?bioproject), "bioproject"))
        FILTER(CONTAINS(STR(?biosample), "biosample"))
      }
      LIMIT 10

  - pattern: rdfs:seeAlso
    description: |
      Feature-level references to external protein, sequence, and taxonomic databases
      using rdfs:seeAlso. Different databases distinguished by URL patterns.
    databases:
      protein:
        - NCBI Protein (ncbiprotein/): RefSeq protein sequences
      sequence:
        - FASTA (getentry.ddbj.nig.ac.jp): Sequence retrieval
      taxonomy:
        - NCBI Taxonomy (taxonomy/): Organism classification
    coverage: CDS features have protein links; Source features have taxonomy links; Entries have FASTA links
    complexity: basic
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?feature ?feature_type ?external_resource
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?feature a ?feature_type ;
                 rdfs:seeAlso ?external_resource .
        FILTER(?feature_type IN (nuc:Coding_Sequence, nuc:Source, nuc:Entry))
      }
      LIMIT 100

  - pattern: ro:0002162 (in taxon)
    description: |
      Taxonomic relationships using RO_0002162 (in taxon) linking features
      to NCBI Taxonomy identifiers. Enables taxonomic filtering and classification.
    databases:
      taxonomy:
        - NCBI Taxonomy (taxonomy/): Full taxonomic hierarchy
    coverage: Most genomic features (genes, CDS, source) have taxonomic links
    complexity: intermediate
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX ro: <http://purl.obolibrary.org/obo/RO_>
      
      SELECT ?feature ?feature_type ?taxon_id
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?feature ro:0002162 ?taxon_id ;
                 a ?feature_type .
        FILTER(CONTAINS(STR(?taxon_id), "taxonomy"))
      }
      LIMIT 100

  - pattern: rdfs:subClassOf
    description: |
      Ontological classification using Sequence Ontology (SO) terms via rdfs:subClassOf.
      Features are typed with specific SO classes enabling semantic queries.
    databases:
      ontology:
        - Sequence Ontology (SO): Genomic feature types and relationships
    coverage: All genomic features have SO classifications
    complexity: intermediate
    sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX so: <http://purl.obolibrary.org/obo/SO_>
      
      SELECT ?feature ?so_class
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?feature a ?feature_type ;
                 rdfs:subClassOf ?so_class .
        FILTER(?feature_type IN (nuc:Gene, nuc:Coding_Sequence, nuc:Exon, 
                                 nuc:Transfer_RNA, nuc:Ribosomal_RNA))
        FILTER(CONTAINS(STR(?so_class), "obo/SO_"))
      }
      LIMIT 100

architectural_notes:
  schema_design:
    - Entry-centric model with nucleotide sequences as central hub
    - Hierarchical feature relationships via BFO_0000050 (part of) and BFO_0000051 (has part)
    - FALDO-based coordinate system for precise genomic locations
    - Sequence Ontology integration for semantic feature typing
    - Gene-CDS relationships via SIO_010081 (encodes)
  performance:
    - Queries filtering by specific INSDC accessions are efficient
    - Location-based queries work well with explicit entry filters first
    - Avoid open-ended queries without entry or feature type restrictions
    - Use LIMIT for exploratory queries to prevent timeouts
    - Feature type filtering (Gene, CDS, tRNA, etc.) is well-optimized
    - Gene-CDS joins via sio:010081 are efficient even without entry filtering
  data_integration:
    - identifiers.org URIs enable seamless cross-database linking
    - BioProject/BioSample provide experimental context
    - NCBI Protein links connect to protein databases
    - NCBI Taxonomy enables phylogenetic analysis
    - FALDO locations support coordinate-based integration
  data_quality:
    - Protein translations available for most CDS features
    - Gene symbols not always present (locus_tag more reliable)
    - External links vary by entry type and submission completeness
    - Inference methods documented for predicted features
    - Taxonomy strings formatted consistently but vary in depth

data_statistics:
  total_entries: Not counted due to large dataset size
  total_genes: Not counted due to large dataset size
  total_cds: Not counted due to large dataset size
  total_trna: Not counted due to large dataset size
  total_rrna: Not counted due to large dataset size
  coverage:
    entries_with_organism: ">99%"
    entries_with_taxonomy: ">95%"
    entries_with_bioproject: "~80%"
    entries_with_biosample: "~80%"
    cds_with_product: ">95%"
    cds_with_translation: ">95%"
    cds_with_protein_link: ">90%"
    genes_with_gene_symbol: "~60%"
    genes_with_locus_tag: ">99%"
    features_with_faldo_location: ">99%"
    features_with_taxonomy_link: ">95%"
  cardinality:
    avg_genes_per_entry: "varies (10-5000+ depending on genome size)"
    avg_cds_per_entry: "similar to gene count"
    avg_trna_per_entry: "40-100 for bacterial genomes"
    avg_rrna_per_entry: "3-9 for bacterial genomes"
    avg_exons_per_gene: "1 (mostly prokaryotic data)"
    avg_references_per_entry: "1-5"
  performance_characteristics:
    - "Entry-specific queries by INSDC accession are fast"
    - "Locus tag lookups are efficient for gene/CDS retrieval"
    - "Product keyword searches work well with CONTAINS and LCASE"
    - "Gene-CDS joins via sio:010081 are optimized"
    - "Cross-reference queries (BioProject/BioSample) are efficient"
    - "Simple UNION queries without complex joins work fine"
    - "TESTED: Missing STR() in CONTAINS actually works (not an anti-pattern)"
    - "TESTED: FALDO queries require entry filtering first"
  data_quality_notes:
    - "Locus tags are more reliable identifiers than gene symbols"
    - "External protein links primarily to NCBI Protein (RefSeq)"
    - "BioProject/BioSample coverage varies by submission age"
    - "Product descriptions vary in specificity from generic to detailed"
    - "Mixed data: primarily prokaryotic with some eukaryotic entries"

anti_patterns:
  - title: "Aggregation Without Entry Filtering"
    problem: "Using COUNT, GROUP BY, or other aggregation functions without filtering to specific entries causes timeouts on this large database."
    wrong_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT (COUNT(*) as ?count)
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?entry a nuc:Entry .
      }
    correct_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?entry
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?entry a nuc:Entry .
      }
      LIMIT 10
    explanation: "Replace aggregation with sampling. Query specific entries with LIMIT and count results manually if needed. For statistics, sample subsets rather than computing across the entire database."

  - title: "FALDO Range Queries Without Entry Filtering"
    problem: "Querying genomic coordinate ranges using FALDO without first filtering by specific entry IDs causes timeouts."
    wrong_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX faldo: <http://biohackathon.org/resource/faldo#>
      
      SELECT ?gene ?start ?end
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?gene a nuc:Gene ;
              faldo:location ?region .
        ?region faldo:begin ?begin ;
                faldo:end ?endPos .
        ?begin faldo:position ?start .
        ?endPos faldo:position ?end .
        FILTER(?start >= 1000000 && ?end <= 1100000)
      }
      LIMIT 10
    correct_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX faldo: <http://biohackathon.org/resource/faldo#>
      
      SELECT ?gene ?locus_tag ?start ?end
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        ?gene a nuc:Gene ;
              nuc:locus_tag ?locus_tag ;
              faldo:location ?region .
        ?region faldo:begin ?begin ;
                faldo:end ?endPos .
        ?begin faldo:position ?start .
        ?endPos faldo:position ?end .
        FILTER(CONTAINS(STR(?gene), "CP036276.1"))
      }
      LIMIT 10
    explanation: "Always filter by specific entry ID using CONTAINS on the gene URI before querying FALDO coordinates. This dramatically reduces the search space."

  - title: "UNION with Complex Joins and Part-Of Relationships"
    problem: "UNION queries combined with bfo:0000050 (part of) relationships and complex joins often timeout."
    wrong_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
      
      SELECT ?rna_type ?product ?location
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        {
          ?rna a nuc:Transfer_RNA ;
               nuc:product ?product ;
               nuc:location ?location ;
               bfo:0000050 ?sequence .
          BIND("tRNA" AS ?rna_type)
        }
        UNION
        {
          ?rna a nuc:Ribosomal_RNA ;
               nuc:product ?product ;
               nuc:location ?location ;
               bfo:0000050 ?sequence .
          BIND("rRNA" AS ?rna_type)
        }
        FILTER(CONTAINS(STR(?sequence), "CP036276.1"))
      }
      LIMIT 20
    correct_sparql: |
      PREFIX nuc: <http://ddbj.nig.ac.jp/ontologies/nucleotide/>
      
      SELECT ?rna_type ?product
      FROM <http://rdfportal.org/dataset/ddbj>
      WHERE {
        {
          ?rna a nuc:Transfer_RNA ;
               nuc:product ?product .
          BIND("tRNA" AS ?rna_type)
        }
        UNION
        {
          ?rna a nuc:Ribosomal_RNA ;
               nuc:product ?product .
          BIND("rRNA" AS ?rna_type)
        }
      }
      LIMIT 20
    explanation: "Simplify UNION queries by removing complex relationship joins. If you need to filter by entry, run separate simple queries for each RNA type instead of using UNION with bfo:0000050."

common_errors:
  - error: "Query timeout after 60 seconds"
    causes:
      - "Using COUNT, SUM, AVG, or GROUP BY without entry-specific filtering"
      - "FALDO coordinate queries without filtering by entry ID first"
      - "UNION queries with complex joins (bfo:0000050) and filtering"
      - "Attempting to query all features across the entire database"
    solutions:
      - "Add FILTER(CONTAINS(STR(?entry), 'ENTRY_ID')) to restrict scope to specific entries"
      - "Replace aggregation with sampling using LIMIT"
      - "For FALDO queries, always filter by entry URI before querying coordinates"
      - "Simplify UNION queries by removing relationship joins"
      - "Split complex queries into multiple simpler queries"
    example_fix: |
      # Instead of: COUNT all entries (times out)
      SELECT (COUNT(*) as ?count) WHERE { ?entry a nuc:Entry }
      
      # Do: Sample with LIMIT
      SELECT ?entry WHERE { ?entry a nuc:Entry } LIMIT 100

  - error: "Empty results when data should exist"
    causes:
      - "Incorrect property or namespace URIs"
      - "Querying wrong graph or missing FROM clause"
      - "Filter conditions too restrictive"
      - "Property may be optional but query requires it"
    solutions:
      - "Always include FROM <http://rdfportal.org/dataset/ddbj> clause"
      - "Check property names against shape expressions"
      - "Use OPTIONAL for properties that may not always be present (e.g., nuc:gene)"
      - "Test queries incrementally - start simple, then add filters"
      - "Verify URIs use correct namespace (identifiers.org vs ddbj.nig.ac.jp)"
    example_fix: |
      # Wrong: Requires gene symbol (many genes lack it)
      SELECT ?gene ?symbol WHERE {
        ?gene a nuc:Gene ; nuc:gene ?symbol .
      }
      
      # Correct: Make gene symbol optional
      SELECT ?gene ?locus_tag ?symbol WHERE {
        ?gene a nuc:Gene ; nuc:locus_tag ?locus_tag .
        OPTIONAL { ?gene nuc:gene ?symbol . }
      }

  - error: "Unexpected or duplicate results"
    causes:
      - "Missing DISTINCT keyword when multiple paths exist to same result"
      - "OPTIONAL clauses multiplying results unintentionally"
      - "Multiple dblink values creating combinations"
    solutions:
      - "Add SELECT DISTINCT instead of SELECT when appropriate"
      - "Review OPTIONAL clauses to ensure they don't create unwanted combinations"
      - "For cross-references with multiple values (like dblink), use separate OPTIONAL clauses"
      - "Test queries with LIMIT 5 first to spot duplication issues"
    example_fix: |
      # May produce duplicates:
      SELECT ?entry ?organism WHERE {
        ?entry nuc:organism ?organism .
        OPTIONAL { ?entry nuc:dblink ?link . }
      }
      
      # Use DISTINCT:
      SELECT DISTINCT ?entry ?organism WHERE {
        ?entry nuc:organism ?organism .
        OPTIONAL { ?entry nuc:dblink ?link . }
      }
